// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace MercuryHealth.AutomatedTest
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// VerifyMyMetricsPageWorks
        /// </summary>
        public void VerifyMyMetricsPageWorks()
        {
            #region Variable Declarations
            HtmlDiv uICatchAllPane = this.UIMSNcomHotmailOutlookWindow.UIMSNcomHotmailOutlookDocument.UIEbAd32190459_billboaFrame.UIHTML5Billboard88x31tDocument.UICatchAllPane;
            HtmlIFrame uIEbAd32190459_billboaFrame = this.UIMSNcomHotmailOutlookWindow.UIMSNcomHotmailOutlookDocument.UIEbAd32190459_billboaFrame;
            HtmlHyperlink uIMyMetricsHyperlink = this.UIMSNcomHotmailOutlookWindow.UIMercuryHealthGroupMeDocument.UIMyMetricsHyperlink;
            #endregion

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'catchAll' pane at (1, 1)
            Mouse.Hover(uICatchAllPane, new Point(1, 1));

            // Mouse hover 'ebAd32190459_billboard_iframe_32190459_93048926593...' frame at (1, 1)
            Mouse.Hover(uIEbAd32190459_billboaFrame, new Point(1, 1));

            // Failed to record the object corresponding to this action.

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Click 'My Metrics' link
            Mouse.Click(uIMyMetricsHyperlink, new Point(72, 39));
        }
        
        /// <summary>
        /// CloseTab
        /// </summary>
        public void CloseTab()
        {

            // Failed to record the object corresponding to this action.
        }
        
        /// <summary>
        /// OpenBrowser
        /// </summary>
        public void OpenBrowser()
        {
            #region Variable Declarations
            HtmlHyperlink uIHEALTHFITNESSHyperlink = this.UIMSNcomHotmailOutlookWindow.UIMSNcomHotmailOutlookDocument.UIMainCustom.UIHEALTHFITNESSHyperlink;
            #endregion

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'HEALTH & FITNESS' link at (1, 1)
            Mouse.Hover(uIHEALTHFITNESSHyperlink, new Point(1, 1));

            // Failed to record the object corresponding to this action.

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;
        }
        
        /// <summary>
        /// NavToMyMetricsPage
        /// </summary>
        public void NavToMyMetricsPage()
        {
            #region Variable Declarations
            HtmlHyperlink uIMyMetricsHyperlink = this.UIMSNcomHotmailOutlookWindow.UIMercuryHealthGroupMeDocument.UIMyMetricsHyperlink;
            #endregion

            // Click 'My Metrics' link
            Mouse.Click(uIMyMetricsHyperlink, new Point(31, 25));
        }
        
        /// <summary>
        /// CloseBrowser
        /// </summary>
        public void CloseBrowser()
        {
            #region Variable Declarations
            WinButton uIResourceExplorerButton = this.UINonstaticmethodrequiWindow.UIFavoritesBarToolBar.UIResourceExplorerButton;
            HtmlCell uIAnunhandledexceptionCell = this.UINonstaticmethodrequiWindow.UINonstaticmethodrequiDocument.UIItemTable.UIAnunhandledexceptionCell;
            #endregion

            // Click 'Resource Explorer' button
            Mouse.Click(uIResourceExplorerButton, new Point(3, 2));

            // Click 'An unhandled exception was generated dur' cell
            Mouse.Click(uIAnunhandledexceptionCell, new Point(36, 14));
        }
        
        /// <summary>
        /// ClickMyMetrics
        /// </summary>
        public void ClickMyMetrics()
        {
            #region Variable Declarations
            HtmlHyperlink uIMyMetricsHyperlink = this.UIMSNcomHotmailOutlookWindow.UIMercuryHealthGroupMeDocument.UIMyMetricsHyperlink;
            #endregion

            // Click 'My Metrics' link
            Mouse.Click(uIMyMetricsHyperlink, new Point(53, 24));
        }
        
        #region Properties
        public UIMSNcomHotmailOutlookWindow UIMSNcomHotmailOutlookWindow
        {
            get
            {
                if ((this.mUIMSNcomHotmailOutlookWindow == null))
                {
                    this.mUIMSNcomHotmailOutlookWindow = new UIMSNcomHotmailOutlookWindow();
                }
                return this.mUIMSNcomHotmailOutlookWindow;
            }
        }
        
        public UINonstaticmethodrequiWindow UINonstaticmethodrequiWindow
        {
            get
            {
                if ((this.mUINonstaticmethodrequiWindow == null))
                {
                    this.mUINonstaticmethodrequiWindow = new UINonstaticmethodrequiWindow();
                }
                return this.mUINonstaticmethodrequiWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIMSNcomHotmailOutlookWindow mUIMSNcomHotmailOutlookWindow;
        
        private UINonstaticmethodrequiWindow mUINonstaticmethodrequiWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIMSNcomHotmailOutlookWindow : BrowserWindow
    {
        
        public UIMSNcomHotmailOutlookWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "MSN.com - Hotmail, Outlook, Skype, Bing, Latest News, Photos & Videos";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("MSN.com - Hotmail, Outlook, Skype, Bing, Latest News, Photos & Videos");
            this.WindowTitles.Add("Mercury Health - Mercury Health");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIMSNcomHotmailOutlookDocument UIMSNcomHotmailOutlookDocument
        {
            get
            {
                if ((this.mUIMSNcomHotmailOutlookDocument == null))
                {
                    this.mUIMSNcomHotmailOutlookDocument = new UIMSNcomHotmailOutlookDocument(this);
                }
                return this.mUIMSNcomHotmailOutlookDocument;
            }
        }
        
        public UIMercuryHealthGroupMeDocument UIMercuryHealthGroupMeDocument
        {
            get
            {
                if ((this.mUIMercuryHealthGroupMeDocument == null))
                {
                    this.mUIMercuryHealthGroupMeDocument = new UIMercuryHealthGroupMeDocument(this);
                }
                return this.mUIMercuryHealthGroupMeDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIMSNcomHotmailOutlookDocument mUIMSNcomHotmailOutlookDocument;
        
        private UIMercuryHealthGroupMeDocument mUIMercuryHealthGroupMeDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIMSNcomHotmailOutlookDocument : HtmlDocument
    {
        
        public UIMSNcomHotmailOutlookDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "MSN.com - Hotmail, Outlook, Skype, Bing, Latest News, Photos & Videos";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://www.msn.com/?ocid=iehp";
            this.WindowTitles.Add("MSN.com - Hotmail, Outlook, Skype, Bing, Latest News, Photos & Videos");
            #endregion
        }
        
        #region Properties
        public UIEbAd32190459_billboaFrame UIEbAd32190459_billboaFrame
        {
            get
            {
                if ((this.mUIEbAd32190459_billboaFrame == null))
                {
                    this.mUIEbAd32190459_billboaFrame = new UIEbAd32190459_billboaFrame(this);
                }
                return this.mUIEbAd32190459_billboaFrame;
            }
        }
        
        public UIMainCustom UIMainCustom
        {
            get
            {
                if ((this.mUIMainCustom == null))
                {
                    this.mUIMainCustom = new UIMainCustom(this);
                }
                return this.mUIMainCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEbAd32190459_billboaFrame mUIEbAd32190459_billboaFrame;
        
        private UIMainCustom mUIMainCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIEbAd32190459_billboaFrame : HtmlIFrame
    {
        
        public UIEbAd32190459_billboaFrame(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlFrame.PropertyNames.Id] = "ebAd32190459_billboard_iframe_32190459_9304892659336474";
            this.SearchProperties[HtmlFrame.PropertyNames.Name] = null;
            this.FilterProperties[HtmlFrame.PropertyNames.AbsolutePath] = "/BurstingRes/Site-43863/WSFolders/4903927_4/panels/billboard/index.html";
            this.FilterProperties[HtmlFrame.PropertyNames.PageUrl] = "http://msntest.serving-sys.com/BurstingRes/Site-43863/WSFolders/4903927_4/panels/" +
                "billboard/index.html?v=_2_50_1_0&plu=45";
            this.FilterProperties[HtmlFrame.PropertyNames.Title] = null;
            this.FilterProperties[HtmlFrame.PropertyNames.Class] = null;
            this.FilterProperties[HtmlFrame.PropertyNames.ControlDefinition] = "id=\"ebAd32190459_billboard_iframe_321904";
            this.FilterProperties[HtmlFrame.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("MSN.com - Hotmail, Outlook, Skype, Bing, Latest News, Photos & Videos");
            #endregion
        }
        
        #region Properties
        public UIHTML5Billboard88x31tDocument UIHTML5Billboard88x31tDocument
        {
            get
            {
                if ((this.mUIHTML5Billboard88x31tDocument == null))
                {
                    this.mUIHTML5Billboard88x31tDocument = new UIHTML5Billboard88x31tDocument(this);
                }
                return this.mUIHTML5Billboard88x31tDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIHTML5Billboard88x31tDocument mUIHTML5Billboard88x31tDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIHTML5Billboard88x31tDocument : HtmlDocument
    {
        
        public UIHTML5Billboard88x31tDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "True";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "HTML5 Billboard: 88x31 to 970x250";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/BurstingRes/Site-43863/WSFolders/4903927_4/panels/billboard/index.html";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://msntest.serving-sys.com/BurstingRes/Site-43863/WSFolders/4903927_4/panels/" +
                "billboard/index.html?v=_2_50_1_0&plu=45";
            this.WindowTitles.Add("MSN.com - Hotmail, Outlook, Skype, Bing, Latest News, Photos & Videos");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UICatchAllPane
        {
            get
            {
                if ((this.mUICatchAllPane == null))
                {
                    this.mUICatchAllPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICatchAllPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "catchAll";
                    this.mUICatchAllPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICatchAllPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
                    this.mUICatchAllPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICatchAllPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUICatchAllPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"catchAll\"";
                    this.mUICatchAllPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "7";
                    this.mUICatchAllPane.WindowTitles.Add("MSN.com - Hotmail, Outlook, Skype, Bing, Latest News, Photos & Videos");
                    #endregion
                }
                return this.mUICatchAllPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUICatchAllPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIMainCustom : HtmlCustom
    {
        
        public UIMainCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "main";
            this.SearchProperties["Id"] = "main";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"main\" role=\"main\" data-m=\'{\"i\":17,\"n";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("MSN.com - Hotmail, Outlook, Skype, Bing, Latest News, Photos & Videos");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIHEALTHFITNESSHyperlink
        {
            get
            {
                if ((this.mUIHEALTHFITNESSHyperlink == null))
                {
                    this.mUIHEALTHFITNESSHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIHEALTHFITNESSHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIHEALTHFITNESSHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIHEALTHFITNESSHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIHEALTHFITNESSHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "HEALTH & FITNESS";
                    this.mUIHEALTHFITNESSHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/en-us/health";
                    this.mUIHEALTHFITNESSHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIHEALTHFITNESSHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://www.msn.com/en-us/health";
                    this.mUIHEALTHFITNESSHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIHEALTHFITNESSHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/en-us/health\"";
                    this.mUIHEALTHFITNESSHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "50";
                    this.mUIHEALTHFITNESSHyperlink.WindowTitles.Add("MSN.com - Hotmail, Outlook, Skype, Bing, Latest News, Photos & Videos");
                    #endregion
                }
                return this.mUIHEALTHFITNESSHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIHEALTHFITNESSHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIMercuryHealthGroupMeDocument : HtmlDocument
    {
        
        public UIMercuryHealthGroupMeDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Mercury Health - Mercury Health";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://mercuryhealthgrp-qa.azurewebsites.net/";
            this.WindowTitles.Add("Mercury Health - Mercury Health");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIMyMetricsHyperlink
        {
            get
            {
                if ((this.mUIMyMetricsHyperlink == null))
                {
                    this.mUIMyMetricsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIMyMetricsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIMyMetricsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIMyMetricsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIMyMetricsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "My Metrics";
                    this.mUIMyMetricsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/MyMetrics/Calculate";
                    this.mUIMyMetricsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIMyMetricsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://mercuryhealthgrp-qa.azurewebsites.net/MyMetrics/Calculate";
                    this.mUIMyMetricsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIMyMetricsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/MyMetrics/Calculate\"";
                    this.mUIMyMetricsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "5";
                    this.mUIMyMetricsHyperlink.WindowTitles.Add("Mercury Health - Mercury Health");
                    #endregion
                }
                return this.mUIMyMetricsHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIMyMetricsHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINonstaticmethodrequiWindow : BrowserWindow
    {
        
        public UINonstaticmethodrequiWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Non-static method requires a target.";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Non-static method requires a target.");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIFavoritesBarToolBar UIFavoritesBarToolBar
        {
            get
            {
                if ((this.mUIFavoritesBarToolBar == null))
                {
                    this.mUIFavoritesBarToolBar = new UIFavoritesBarToolBar(this);
                }
                return this.mUIFavoritesBarToolBar;
            }
        }
        
        public UINonstaticmethodrequiDocument UINonstaticmethodrequiDocument
        {
            get
            {
                if ((this.mUINonstaticmethodrequiDocument == null))
                {
                    this.mUINonstaticmethodrequiDocument = new UINonstaticmethodrequiDocument(this);
                }
                return this.mUINonstaticmethodrequiDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIFavoritesBarToolBar mUIFavoritesBarToolBar;
        
        private UINonstaticmethodrequiDocument mUINonstaticmethodrequiDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIFavoritesBarToolBar : WinToolBar
    {
        
        public UIFavoritesBarToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "Favorites Bar";
            this.WindowTitles.Add("Non-static method requires a target.");
            #endregion
        }
        
        #region Properties
        public WinButton UIResourceExplorerButton
        {
            get
            {
                if ((this.mUIResourceExplorerButton == null))
                {
                    this.mUIResourceExplorerButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIResourceExplorerButton.SearchProperties[WinButton.PropertyNames.Name] = "Resource Explorer";
                    this.mUIResourceExplorerButton.WindowTitles.Add("Non-static method requires a target.");
                    #endregion
                }
                return this.mUIResourceExplorerButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIResourceExplorerButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINonstaticmethodrequiDocument : HtmlDocument
    {
        
        public UINonstaticmethodrequiDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Non-static method requires a target.";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MyMetrics/Calculate";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://mercuryhealthgrp-qa.azurewebsites.net/MyMetrics/Calculate";
            this.WindowTitles.Add("Non-static method requires a target.");
            #endregion
        }
        
        #region Properties
        public UIItemTable UIItemTable
        {
            get
            {
                if ((this.mUIItemTable == null))
                {
                    this.mUIItemTable = new UIItemTable(this);
                }
                return this.mUIItemTable;
            }
        }
        #endregion
        
        #region Fields
        private UIItemTable mUIItemTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemTable : HtmlTable
    {
        
        public UIItemTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = null;
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "An unhandled exception was generated dur";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "width=\"100%\" bgcolor=\"#ffffcc\"";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "1";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "1";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = null;
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Non-static method requires a target.");
            #endregion
        }
        
        #region Properties
        public HtmlCell UIAnunhandledexceptionCell
        {
            get
            {
                if ((this.mUIAnunhandledexceptionCell == null))
                {
                    this.mUIAnunhandledexceptionCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIAnunhandledexceptionCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUIAnunhandledexceptionCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIAnunhandledexceptionCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUIAnunhandledexceptionCell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "An unhandled exception was generated dur";
                    this.mUIAnunhandledexceptionCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = null;
                    this.mUIAnunhandledexceptionCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "0";
                    this.mUIAnunhandledexceptionCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "0";
                    this.mUIAnunhandledexceptionCell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUIAnunhandledexceptionCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "1";
                    this.mUIAnunhandledexceptionCell.WindowTitles.Add("Non-static method requires a target.");
                    #endregion
                }
                return this.mUIAnunhandledexceptionCell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUIAnunhandledexceptionCell;
        #endregion
    }
}
